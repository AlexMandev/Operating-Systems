03-a-0200.txt
Сортирайте /etc/passwd лексикографски по поле UserID.

Solution:
cat /etc/passwd | sort -t ':' -k 3,3


03-a-0201.txt
Сортирайте /etc/passwd числово по поле UserID.
(Открийте разликите с лексикографската сортировка)

Solution:
cat /etc/passwd | sort -n -t ':' -k 3,3


03-a-0210.txt
Изведете само 1-ва и 5-та колона на файла /etc/passwd спрямо разделител ":".

Solution:
cat /etc/passwd | cut -d ':' -f 1,5



03-a-0211.txt
Изведете съдържанието на файла /etc/passwd от 2-ри до 6-ти символ.

Solution:
cat /etc/passwd | tr -d '\n' | cut -c 2-6


03-a-0212.txt
Отпечатайте потребителските имена и техните home директории от /etc/passwd.

Solution:
cat /etc/passwd | cut -d ':' -f 1,6


03-a-0213.txt
Отпечатайте втората колона на /etc/passwd, разделена спрямо символ '/'.

Solution:
cat /etc/passwd | cut -d '/' -f 2


03-a-1500.txt
Изведете броя на байтовете в /etc/passwd.
Изведете броя на символите в /etc/passwd.
Изведете броя на редовете  в /etc/passwd.

Solution:
cat /etc/passwd | wc -c
cat /etc/passwd | wc -m
cat /etc/passwd | wc -l


03-a-2000.txt
С отделни команди, извадете от файл /etc/passwd:
- първите 12 реда
- първите 26 символа
- всички редове, освен последните 4
- последните 17 реда
- 151-я ред (или друг произволен, ако нямате достатъчно редове)
- последните 4 символа от 13-ти ред (символът за нов ред не е част от реда)

Solution: 
#Първите 12 реда
head /etc/passwd -n 12 

#Първите 26 символа
head /etc/passwd -c 26 ИЛИ cat /etc/passwd | cut -c 1-26

#Всички редове освен последните 4
head /etc/passwd -n -4


#Последните 17 реда
tail /etc/passwd -n 17

#151-я ред
head -n 151 /etc/passwd | tail -n 1

#Последните 4 символа от 13-ти ред
head /etc/passwd -n 13 | tail -n 1 | rev | cut -c 1-4 | rev



03-a-3000.txt
Запаметете във файл в своята home директория резултатът от командата `df -P`.
Напишете команда, която извежда на екрана съдържанието на този файл, без първия ред (хедъра), сортирано по второ поле (numeric).

Solution:
df -P > ~/df-P-output.txt
cat ~/df-P-output.txt | tail -n +2 | tr -s ' ' | sort -t ' ' -k 2,2 -n


03-a-3100.txt
Запазете само потребителските имена от /etc/passwd във файл users във вашата home директория.

Solution:
cat /etc/passwd | cut -d ':' -f 1 >> ~/users



03-a-3500.txt
Изпишете всички usernames от /etc/passwd с главни букви.

Solution:
cat /etc/passwd | cut -d ':' -f 1 | tr '[a-z]' '[A-Z]'



03-a-5000.txt
Изведете реда от /etc/passwd, на който има информация за вашия потребител.

Solution:
grep $(id -un) /etc/passwd


Изведедете този ред и двата реда преди него.

Solution:
grep $(id -un) -B 2 /etc/passwd 


Изведете този ред, двата преди него, и трите след него.

Solution:
grep $(id -un) -B 2 -A 3 /etc/passwd


Изведете *само* реда, който се намира 2 реда преди реда, съдържащ информация за вашия потребител.

Solution:
grep $(id -un) -B 2 /etc/passwd | head -n 1


03-a-5001.txt
Изведете колко потребители не изпозват /bin/bash за login shell според /etc/passwd

(hint: 'man 5 passwd' за информация какъв е форматът на /etc/passwd)

Solution:
grep -v '/bin/bash' /etc/passwd | wc -l


03-a-5002.txt
Изведете само имената на хората с второ име по-дълго от 6 (>6) символа според /etc/passwd

Solution:
cut /etc/passwd -d : -f 5 | grep --color -E "[^ ]+ [^ ,]{7,}" | cut -d , -f1



03-a-5003.txt
Изведете имената на хората с второ име по-късо от 8 (<=7) символа според /etc/passwd // !(>7) = ?

Solution:
cut /etc/passwd -d : -f 5 | cut -d , -f1 | grep -E "^[^ ]+ [^ ,]{1,7}$"



03-a-5004.txt
Изведете целите редове от /etc/passwd за хората от 03-a-5003

Solution:
??????





03-a-6000.txt
Копирайте <РЕПО>/exercises/data/emp.data във вашата home директория.
Посредством awk, използвайки копирания файл за входнни данни, изведете:

- общия брой редове
- третия ред
- последното поле от всеки ред
- последното поле на последния ред
- всеки ред, който има повече от 4 полета
- всеки ред, чието последно поле е по-голямо от 4
- общия брой полета във всички редове
- броя редове, в които се среща низът Beth
- най-голямото трето поле и редът, който го съдържа
- всеки ред, който има поне едно поле
- всеки ред, който има повече от 17 знака
- броя на полетата във всеки ред и самият ред
- първите две полета от всеки ред, с разменени места
- всеки ред така, че първите две полета да са с разменени места
- всеки ред така, че на мястото на първото поле да има номер на реда
- всеки ред без второто поле
- за всеки ред, сумата от второ и трето поле
- сумата на второ и трето поле от всеки ред


03-b-0300.txt
Намерете само Group ID-то си от файлa /etc/passwd.

Solution:
grep $(id -un) /etc/passwd | cut -d ':' -f 4


03-b-3400.txt
Колко коментара има във файла /etc/services ? Коментарите се маркират със символа #, след който всеки символ на реда се счита за коментар.

Solution:
grep "#" /etc/services -c


03-b-3500.txt
Колко файлове в /bin са 'shell script'-oве? (Колко файлове в дадена директория са ASCII text?)

Solution:
може би със grep "#!/bin/bash" или с командата file, ако я вземем
grep '#!/bin/bash' /bin/* -l
По-вероятно е с file, защото горният ред ще намери само bash shell скриптове


03-b-3600.txt
Направете списък с директориите на вашата файлова система, до които нямате достъп. 
Понеже файловата система може да е много голяма, търсете до 3 нива на дълбочина.

Solution:
find / -maxdepth 3 -type d 2>&1 >/dev/null | grep 'Permission denied' | cut -d ' ' -f 2 | cut -d ':' -f 1


03-b-4000.txt
Създайте следната файлова йерархия в home директорията ви:
dir5/file1
dir5/file2
dir5/file3

Посредством vi въведете следното съдържание:
file1:
1
2
3

file2:
s
a
d
f

file3:
3
2
1
45
42
14
1
52

Изведете на екрана:
        * статистика за броя редове, думи и символи за всеки един файл
        * статистика за броя редове и символи за всички файлове
        * общия брой редове на трите файла

Solution:
mkdir dir5
cd dir5
touch file1 file2 file3
wc file1 file2 file3

03-b-4001.txt
Във file2 (inplace) подменете всички малки букви с главни.




03-b-4002.txt
Във file3 (inplace) изтрийте всички "1"-ци.

Solution:
sed 's/1//g' file3 -i



03-b-4003.txt
Изведете статистика за най-често срещаните символи в трите файла.



03-b-4004.txt
Направете нов файл с име по ваш избор, чието съдържание е конкатенирани
съдържанията на file{1,2,3}.

Solution:
cat file[1-3] > combined_file


03-b-4005.txt
Прочетете текстов файл file1 и направете всички главни букви малки като
запишете резултата във file2.

Solution:
cat file1 | tr '[A-Z]' '[a-z]' > file2



03-b-5200.txt
Намерете броя на символите, различни от буквата 'а' във файла /etc/passwd

Solution:
cat /etc/passwd | tr -d 'a' | wc -c



03-b-5300.txt
Намерете броя на уникалните символи, използвани в имената на потребителите от
/etc/passwd.

Solution:
cut /etc/passwd -d: -f1 | grep -o . | sort | uniq | wc -l


03-b-5400.txt
Отпечатайте всички редове на файла /etc/passwd, които не съдържат символния низ 'ов'.

Solution:
grep -E "ов" /etc/passwd -v


03-b-6100.txt
Отпечатайте последната цифра на UID на всички редове между 28-ми и 46-ред в /etc/passwd.

Solution:
cut /etc/passwd -d ':' -f 3 | head -n 46 | tail -n +28 | grep -E ".$" -o



03-b-6700.txt
Отпечатайте правата (permissions) и имената на всички файлове, до които имате
read достъп, намиращи се в директорията /tmp. (hint: 'man find', вижте -readable)

Solution:
find /tmp -type f -readable -printf '%m %p\n' 2>/dev/null



03-b-6900.txt
Намерете имената на 10-те файла във вашата home директория, чието съдържание е
редактирано най-скоро. На първо място трябва да бъде най-скоро редактираният
файл. Намерете 10-те най-скоро достъпени файлове. (hint: Unix time)

Solution:
find ~ -type f -printf '%T@ %p\n' | sort -nr | head -10 | cut -d' ' -f2
find ~ -type f -printf '%A@ %p\n' | sort -nr | head -10 | cut -d' ' -f2-


03-b-7000.txt
да приемем, че файловете, които съдържат C код, завършват на `.c` или `.h`.
Колко на брой са те в директорията `/usr/include`?
Колко реда C код има в тези файлове?

Solution:
find /usr/include -type f \( -name '*.c' -o -name '*.h' \) | wc -l
find /usr/include -type f \( -name '*.c' -o -name '*.h' \) -exec cat {} \; | wc -l



03-b-7500.txt
Даден ви е ASCII текстов файл - /etc/services. Отпечатайте хистограма на 10-те най-често срещани думи.
Дума наричаме непразна последователност от букви. Не правим разлика между главни и малки букви.
Хистограма наричаме поредица от редове, всеки от които има вида:
<брой срещания> <какво се среща толкова пъти>

Solution:
cat /etc/services | tr '\t\n' '  ' | tr -s ' ' | tr '[:upper:]' '[:lower:]' | grep -E '[a-z]+' -o | sort | uniq -c | sort -nr
👹👹👹


03-b-8000.txt
Вземете факултетните номера на студентите (описани във файла
<РЕПО>/exercises/data/mypasswd.txt) от СИ и ги запишете във файл si.txt сортирани.

Студент е част от СИ, ако home директорията на този потребител (според
<РЕПО>/exercises/data/mypasswd.txt) се намира в /home/SI директорията.


03-b-8500.txt
За всяка група от /etc/group изпишете "Hello, <група>", като ако това е вашата група, напишете "Hello, <група> - I am here!".


03-b-8600.txt
Shell Script-овете са файлове, които по конвенция имат разширение .sh. Всеки
такъв файл започва с "#!<interpreter>" , където <interpreter> указва на
операционната система какъв интерпретатор да пусне (пр: "#!/bin/bash",
"#!/usr/bin/python3 -u").

Намерете всички .sh файлове в директорията `/usr` и нейните поддиректории, и
проверете кой е най-често използваният интерпретатор.


03-b-8700.txt
1. Изведете GID-овете на 5-те най-големи групи спрямо броя потребители, за които
съответната група е основна (primary).

2. (*) Изведете имената на съответните групи.

Hint: /etc/passwd


03-b-9000.txt
Направете файл eternity. Намерете всички файлове, намиращи се във вашата home
директория и нейните поддиректории, които са били модифицирани в последните
15мин (по възможност изключете .).  Запишете във eternity името (път) на
файла и времето (unix time) на последната промяна.

Solution:
find ~ -type f -mmin -15 -printf '%p %T@\n' > eternity


03-b-9050.txt
Копирайте файл <РЕПО>/exercises/data/population.csv във вашата home директория.

Solution:
cp /srv/fmi-os/exercises/data/population.csv .

03-b-9051.txt
Използвайки файл population.csv, намерете колко е общото население на света
през 2008 година. А през 2016?


03-b-9052.txt
Използвайки файл population.csv, намерете през коя година в България има най-много население.

Solution:
grep -Ei 'bulgaria' population.csv | sort -t ',' -k 4 -r | head -n 1 | cut -d, -f3


03-b-9053.txt
Използвайки файл population.csv, намерете коя държава има най-много население през 2016. А коя е с най-малко население?
(Hint: Погледнете имената на държавите)


03-b-9054.txt
Използвайки файл population.csv, намерете коя държава е на 42-ро място по
население през 1969. Колко е населението й през тази година?


03-b-9100.txt
В home директорията си изпълнете командата
curl -o songs.tar.gz "http://fangorn.uni-sofia.bg/misc/songs.tar.gz"


03-b-9101.txt
Да се разархивира архивът songs.tar.gz в директория songs във вашата home директория.


03-b-9102.txt
Да се изведат само имената на песните.


03-b-9103.txt
Имената на песните да се направят с малки букви, да се заменят спейсовете с
долни черти и да се сортират.


03-b-9104.txt
Да се изведат всички албуми, сортирани по година.


03-b-9105.txt
Да се преброят/изведат само песните на Beatles и Pink.


03-b-9106.txt
Да се направят директории с имената на уникалните групи. За улеснение, имената
от две думи да се напишат слято:

Beatles, PinkFloyd, Madness


03-b-9200.txt
Напишете серия от команди, които извеждат детайли за файловете и директориите в
текущата директория, които имат същите права за достъп както най-големият файл
в /etc директорията.


03-b-9300.txt
Дадени са ви 2 списъка с email адреси - първият има 12 валидни адреса, а
вторията има само невалидни. Филтрирайте всички адреси, така че да останат
само валидните. Колко кратък регулярен израз можете да направите за целта?

Валидни email адреси (12 на брой):
email@example.com
firstname.lastname@example.com
email@subdomain.example.com
email@123.123.123.123
1234567890@example.com
email@example-one.com
_______@example.com
email@example.name
email@example.museum
email@example.co.jp
firstname-lastname@example.com
unusually.long.long.name@example.com

Невалидни email адреси:
#@%^%#$@#$@#.com
@example.com
myemail
Joe Smith <email@example.com>
email.example.com
email@example@example.com
.email@example.com
email.@example.com
email..email@example.com
email@-example.com
email@example..com
Abc..123@example.com
(),:;<>[\]@example.com
just"not"right@example.com
this\ is"really"not\allowed@example.com


03-b-9400.txt
Посредством awk, използвайки emp.data (от 03-a-6000.txt) за входнни данни,
изведете:

- всеки ред, като полетата са в обратен ред

(Разгледайте for цикли в awk)


03-b-9500.txt
Копирайте <РЕПО>/exercises/data/ssa-input.txt във вашата home директория.
Общият вид на файла е:

- заглавна част:
        Smart Array P440ar in Slot 0 (Embedded)

- една или повече секции за масиви:
        Array A
        Array B
        ...
        като буквата (A, B, ...) е името на масива

- във всяка таква секция има една или повече подсекции за дискове:
        physicaldrive 2I:0:5
        physicaldrive 2I:0:6
        ...

        като 2I:0:5 е името на диска

- във всяка подсекция за диск има множество параметри във вида:
        key name: value
        като за нас са интересни само:

                Current Temperature (C): 35
                Maximum Temperature (C): 36

Напишете поредица от команди която обработва файл в този формат, и генерира
следният изход:

A-2I:0:5 35 36
A-2I:0:6 34 35
B-1I:1:1 35 50
B-1I:1:2 35 49

x-yyyyyy zz ww

където:
        - x е името на масива
        - yyyyyy е името на диска
        - zz е current temperature
        - ww е max temperature
